@model onlineKredit.web.Models.KontoInformationenModel

@{
    ViewBag.Title = "KontoInformationen";
}

<div id="content" style="margin-top: 20px">
    <h2>Konto Informationen</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID_Kunde)

        <div class="form-horizontal">
            <div class="row" style="margin-top: 20px">
                <div class="col-lg-offset-4 col-md-offset-4 col-lg-6 col-md-6">
                    Um den Kreditantrag abschließen zu können benötigen Sie ein Konto oder eine Kreditkarte. Wählen Sie dazu die Option
                    "Neues Konto anlegen" oder geben Sie vorhandene Konto-Informationen ein.
                    <br /><br />
                    lorem ipsum et dolorem lorem ipsum et dolorem lorem ipsum et dolorem lorem ipsum et dolorem lorem ipsum et dolorem lorem ipsum et dolorem
                </div>
            </div>
            <hr />
            <div class="row" id="auswahl">
                <div class="col-lg-offset-1 col-lg-2 col-md-2">
                    <input type="radio" name="auswahl" value="neu" checked="checked" /> neues Konto
                </div>
                <div class="col-lg-2 col-md-2">
                    <input type="radio" name="auswahl" value="bestehend" /> bestehendes Konto
                </div>
                <div class="col-lg-2 col-md-2">
                    <input type="radio" name="auswahl" value="kreditkarte" /> Kreditkarte
                </div>
            </div>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div id="bestehendesKonto">
                <h3>Bestehendes Konto</h3>
                <div class="row">

                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.BankName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.IBAN, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.IBAN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IBAN, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.BIC, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.BIC, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BIC, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div id="kreditKarte">
                <h3>Kredit-Karten Informationen</h3>
                <div class="row">

                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.KreditKartenInhaber, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.KreditKartenInhaber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.KreditKartenInhaber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.KreditKartenNummer, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.KreditKartenNummer, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.KreditKartenNummer, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-offset-1 col-md-offset-1 col-lg-3 col-md-3" style="text-align: right">
                        @Html.LabelFor(model => model.KreditKartenGültigBis, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-lg-6 col-md-6">
                        @Html.TextBoxFor(model => model.KreditKartenGültigBis, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.KreditKartenGültigBis, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-offset-4 col-md-offset-4 col-lg-3 col-md-3">

                    <input type="submit" value="Bestätigen" class="btn btn-default" />

                </div>
            </div>
        </div>
    }

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {

            $('#bestehendesKonto input').prop('disabled', 'true');
            $('#kreditKarte input').prop('disabled', 'true');

            $("#auswahl input[type='radio']").change(function () {
                //console.log("auswahl hat sich geändert");

                //console.log($(this).val());

                // Variante 1 - Warmduscher - gaaaaanz warm duscher
                //if ($(this).val() == 'neu') {
                //    $('#bestehendesKonto input').prop('disabled', 'true');
                //    $('#kreditKarte input').prop('disabled', 'true');
                //} else if ($(this).val() == 'bestehend') {
                //    $('#bestehendesKonto input').prop('disabled', 'false');
                //    $('#kreditKarte input').prop('disabled', 'true');
                //} else if ($(this).val() == 'kreditKarte') {
                //    $('#bestehendesKonto input').prop('disabled', 'true');
                //    $('#kreditKarte input').prop('disabled', 'false');
                //}


                // Variante 2 - so gehts wirklich
                $('#bestehendesKonto input').prop('disabled', !($(this).val() == 'bestehend'));
                $('#kreditKarte input').prop('disabled', !($(this).val() == 'kreditkarte'));


            });

            //$('#content .form-control').prop('disabled', $('#chkNeuesKonto').is(':checked'));

            //$('#chkNeuesKonto').change(function () {
            //    $('#content .form-control').prop('disabled', $(this).is(':checked'));
            //});
        });
    </script>
}

